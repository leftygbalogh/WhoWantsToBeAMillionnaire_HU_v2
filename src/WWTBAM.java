
import java.util.List;
import java.util.Random;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import pojos.Kerdesek;
import utils.DB_Manager;

/**
 * Code is prose. Lefty G Balogh
 *
 *
 * @author lefty
 */
public class WWTBAM extends javax.swing.JFrame {

    /**
     * Creates new form WWTBAM
     */
    Kerdesek[] kerdesek;
    boolean iWantToGoOn = true;
    boolean thereAreMoreQuestions = true;
    boolean previousAnswerWasCorrect = true;
    int kerdesIndex = 0;
    int selectedAnswer = -1;
    javax.swing.JLabel[] prizeLabels;
    static int TIER_ONE_PRIZE_LEVEL = 5;
    static int TIER_TWO_PRIZE_LEVEL = 10;
    
    public WWTBAM() {
        initComponents();
        this.setLocationRelativeTo(this);
        DB_Manager dbManager = new DB_Manager();
        prizeLabels = new javax.swing.JLabel[15];
        kerdesek = new Kerdesek[15];
        List<Kerdesek> klist = dbManager.getKerdesLista();
        kerdesek = klist.toArray(new Kerdesek[0]);
        randomizeQuestions(kerdesek);
        randomizeAnswers(kerdesek);
        grabPrizeLabels();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        answerButtonGroup = new javax.swing.ButtonGroup();
        tfQuestion = new javax.swing.JTextField();
        btnAnswer1 = new javax.swing.JToggleButton();
        btnAnswer3 = new javax.swing.JToggleButton();
        btnAnswer0 = new javax.swing.JToggleButton();
        btnAnswer2 = new javax.swing.JToggleButton();
        btnCheck = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        answer = new javax.swing.JLabel();
        checkBox100K = new javax.swing.JCheckBox();
        label5K = new javax.swing.JLabel();
        label10K = new javax.swing.JLabel();
        label50K = new javax.swing.JLabel();
        label20K = new javax.swing.JLabel();
        label100K = new javax.swing.JLabel();
        checkBox1p5M = new javax.swing.JCheckBox();
        label200K = new javax.swing.JLabel();
        label300K = new javax.swing.JLabel();
        label1M = new javax.swing.JLabel();
        label500K = new javax.swing.JLabel();
        label1p5M = new javax.swing.JLabel();
        checkBox40M = new javax.swing.JCheckBox();
        label3M = new javax.swing.JLabel();
        label5M = new javax.swing.JLabel();
        label20M = new javax.swing.JLabel();
        label10M = new javax.swing.JLabel();
        label40M = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tfQuestion.setEditable(false);
        tfQuestion.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        tfQuestion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfQuestion.setText("Készen áll?");
        tfQuestion.setDisabledTextColor(new java.awt.Color(37, 34, 31));
        tfQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQuestionActionPerformed(evt);
            }
        });

        answerButtonGroup.add(btnAnswer1);
        btnAnswer1.setText(" ");
        btnAnswer1.setFocusPainted(false);
        btnAnswer1.setNextFocusableComponent(btnAnswer2);

        answerButtonGroup.add(btnAnswer3);
        btnAnswer3.setFocusPainted(false);
        btnAnswer3.setMaximumSize(new java.awt.Dimension(15, 29));
        btnAnswer3.setNextFocusableComponent(btnAnswer0);

        answerButtonGroup.add(btnAnswer0);
        btnAnswer0.setText(" ");
        btnAnswer0.setFocusPainted(false);
        btnAnswer0.setNextFocusableComponent(btnAnswer1);

        answerButtonGroup.add(btnAnswer2);
        btnAnswer2.setText(" ");
        btnAnswer2.setFocusPainted(false);
        btnAnswer2.setNextFocusableComponent(btnAnswer3);

        btnCheck.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnCheck.setText("Igen");
        btnCheck.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCheck.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        btnCancel.setText("Nagyon nem");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        answer.setText("  ");

        label5K.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        label5K.setForeground(new java.awt.Color(237, 95, 19));
        label5K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label5K.setText("5 000");
        label5K.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        label10K.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label10K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label10K.setText("10 000");

        label50K.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label50K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label50K.setText("50 000");

        label20K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label20K.setText("20 000");

        label100K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label100K.setText("100 000");

        label200K.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label200K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label200K.setText("200 000");

        label300K.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label300K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label300K.setText("300 000");

        label1M.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label1M.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label1M.setText("1 000 000");

        label500K.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label500K.setText("500 000");

        label1p5M.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label1p5M.setText("1 500 000");

        label3M.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label3M.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label3M.setText("3 000 000");

        label5M.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label5M.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label5M.setText("5 000 000");

        label20M.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        label20M.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label20M.setText("20 000 000");

        label10M.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label10M.setText("10 000 000");

        label40M.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label40M.setText("40 000 000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfQuestion)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAnswer0, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                            .addComponent(btnAnswer2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAnswer3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAnswer1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(answer, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkBox100K)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label5K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label50K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label20K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label100K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(259, 259, 259)
                        .addComponent(checkBox1p5M)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label200K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label300K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1M, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label500K, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1p5M, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkBox40M)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label3M, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label5M, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label20M, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10M, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label40M, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label5K)
                                .addGap(30, 30, 30))
                            .addComponent(label10K))
                        .addGap(12, 12, 12)
                        .addComponent(label20K)
                        .addGap(8, 8, 8)
                        .addComponent(label50K)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBox100K)
                            .addComponent(label100K)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label200K)
                                .addGap(30, 30, 30))
                            .addComponent(label300K))
                        .addGap(12, 12, 12)
                        .addComponent(label500K)
                        .addGap(8, 8, 8)
                        .addComponent(label1M)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBox1p5M)
                            .addComponent(label1p5M)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label3M)
                                .addGap(30, 30, 30))
                            .addComponent(label5M))
                        .addGap(12, 12, 12)
                        .addComponent(label10M)
                        .addGap(8, 8, 8)
                        .addComponent(label20M)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBox40M)
                            .addComponent(label40M))))
                .addGap(18, 18, 18)
                .addComponent(tfQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAnswer0)
                    .addComponent(btnAnswer1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAnswer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnswer2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answer)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAnswer1, btnAnswer3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQuestionActionPerformed

    }//GEN-LAST:event_tfQuestionActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        
        if (tfQuestion.isEnabled()) {
            initializeBoard();
            labelQuestionsAndAnswers(kerdesek[kerdesIndex]);
            
        } else {
            
            if (isAnAnswerSelected()) {
                
                if (isAnswerCorrect(kerdesek[kerdesIndex])) {
                    
                    if (kerdesIndex == 14) {
                        weVeGotAWinner();
                    }
                    
                    System.out.println("helyes");
                    answer.setText("Helyes volt a valasz.");
                                       
                    kerdesIndex++;
                    labelQuestionsAndAnswers(kerdesek[kerdesIndex]);
                    framePrizeLabel(kerdesIndex);
                    
                   
                    
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Ennyi volt. Szevasz.\nNem, nem jatszhatsz ujbol.\n\nEs meg a helyes valaszt sem mondom meg.", "Eljovende a vilag vege!", JOptionPane.ERROR_MESSAGE);
                    JOptionPane.showMessageDialog(rootPane, "Ez mar igy eleg graceful?", "Balazs!", JOptionPane.OK_CANCEL_OPTION);
                    JOptionPane.showConfirmDialog(rootPane, "Tutituti?");
                    JOptionPane.showConfirmDialog(rootPane, "De nem csak azert mondod ugye?");
                    JOptionPane.showMessageDialog(rootPane, "Akkor jo");
                    System.exit(0);
                    
                }
                
            } else {
                JOptionPane.showMessageDialog(rootPane, "Valaszd a B-t vagy hivd fel a nagyit.", "Ne rohanjunk annyira...", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        

    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (tfQuestion.isEnabled()) {
            if (JOptionPane.showConfirmDialog(
                    rootPane, "Ez most komoly?", "Miert kezdted el?",
                    JOptionPane.NO_OPTION) == JOptionPane.OK_OPTION) {
                System.exit(0);
            }
        } else if (checkBox1p5M.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane, "Masfel guriga. Szep naszut lesz!", "Szep jatek volt",
                    JOptionPane.NO_OPTION);
            System.exit(0);
        } else if (checkBox100K.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane, "Gratula a kilohoz.\nFestesd ki a konyhat es\nvegyel a gyereknek egy uj cipot.", "Jo dontes",
                    JOptionPane.NO_OPTION);
            System.exit(0);
        } else {
            if (JOptionPane.showConfirmDialog(
                    rootPane, "Okos gondolat ez?", "Ilyenkor kiszallni?",
                    JOptionPane.NO_OPTION) == JOptionPane.OK_OPTION) {
                System.exit(0);
            }
        }

    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WWTBAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WWTBAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WWTBAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WWTBAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WWTBAM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answer;
    private javax.swing.ButtonGroup answerButtonGroup;
    private javax.swing.JToggleButton btnAnswer0;
    private javax.swing.JToggleButton btnAnswer1;
    private javax.swing.JToggleButton btnAnswer2;
    private javax.swing.JToggleButton btnAnswer3;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCheck;
    private javax.swing.JCheckBox checkBox100K;
    private javax.swing.JCheckBox checkBox1p5M;
    private javax.swing.JCheckBox checkBox40M;
    private javax.swing.JLabel label100K;
    private javax.swing.JLabel label10K;
    private javax.swing.JLabel label10M;
    private javax.swing.JLabel label1M;
    private javax.swing.JLabel label1p5M;
    private javax.swing.JLabel label200K;
    private javax.swing.JLabel label20K;
    private javax.swing.JLabel label20M;
    private javax.swing.JLabel label300K;
    private javax.swing.JLabel label3M;
    private javax.swing.JLabel label40M;
    private javax.swing.JLabel label500K;
    private javax.swing.JLabel label50K;
    private javax.swing.JLabel label5K;
    private javax.swing.JLabel label5M;
    private javax.swing.JTextField tfQuestion;
    // End of variables declaration//GEN-END:variables

    private void labelQuestionsAndAnswers(Kerdesek kerdes) {
        String kerdesText = (kerdes.getKerdes());
        String answer0 = kerdes.getValasz0();
        String answer1 = kerdes.getValasz1();
        String answer2 = kerdes.getValasz2();
        String answer3 = kerdes.getValasz3();
        
        tfQuestion.setText(kerdesText);
        btnAnswer0.setText(answer0);
        btnAnswer1.setText(answer1);
        btnAnswer2.setText(answer2);
        btnAnswer3.setText(answer3);
        
    }
    
    private void initializeBoard() {
        tfQuestion.setEnabled(false);
        btnCheck.setText("Megnézem");
        btnCancel.setText("Megállok");
    }
    
    private boolean isAnAnswerSelected() {
        if (btnAnswer0.isSelected()) {
            selectedAnswer = 0;
            return true;
        }
        if (btnAnswer1.isSelected()) {
            selectedAnswer = 1;
            return true;
        }
        if (btnAnswer2.isSelected()) {
            selectedAnswer = 2;
            return true;
        }
        if (btnAnswer3.isSelected()) {
            selectedAnswer = 3;
            return true;
        }
        return false;
    }
    
    private boolean isAnswerCorrect(Kerdesek kerdes) {
        int correctAnswer = kerdes.getHelyesvalasz();
        if (correctAnswer == selectedAnswer) {
            previousAnswerWasCorrect = true;
            deselectButtons();
            return true;
        } else {
            previousAnswerWasCorrect = false;
            return false;
        }
    }
    
    private void grabPrizeLabels() {
        prizeLabels[0] = label5K;
        prizeLabels[1] = label10K;
        prizeLabels[2] = label20K;
        prizeLabels[3] = label50K;
        prizeLabels[4] = label100K;
        prizeLabels[5] = label200K;
        prizeLabels[6] = label300K;
        prizeLabels[7] = label500K;
        prizeLabels[8] = label1M;
        prizeLabels[9] = label1p5M;
        prizeLabels[10] = label3M;
        prizeLabels[11] = label5M;
        prizeLabels[12] = label10M;
        prizeLabels[13] = label20M;
        prizeLabels[14] = label40M;
    }
    
    private void framePrizeLAbel(JLabel jLabel) {
        jLabel.setForeground(new java.awt.Color(237, 95, 19));
        jLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        
    }
    
    private void framePrizeLabel(int kerdesIndex) {
        if (kerdesIndex == TIER_ONE_PRIZE_LEVEL) {
            checkBox100K.setSelected(true);
        }
        
        if (kerdesIndex == TIER_TWO_PRIZE_LEVEL) {
            checkBox1p5M.setSelected(true);
        }
        
        prizeLabels[kerdesIndex - 1].setForeground(new java.awt.Color(76, 76, 76));
        prizeLabels[kerdesIndex - 1].setBorder(null);
        prizeLabels[kerdesIndex - 1].setFont(new java.awt.Font("Ubuntu", 0, 15));
        
        prizeLabels[kerdesIndex].setForeground(new java.awt.Color(237, 95, 19));
        prizeLabels[kerdesIndex].setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        prizeLabels[kerdesIndex].setFont(new java.awt.Font("Ubuntu", 1, 15));
        
    }
    
    public void deselectButtons() {
        
        answerButtonGroup.clearSelection();
//        if (btnAnswer0.isSelected()) {
//            btnAnswer0.setSelected(false);
//        }
//        if (btnAnswer1.isSelected()) {
//            btnAnswer1.setSelected(false);
//        }
//        if (btnAnswer2.isSelected()) {
//            btnAnswer2.setSelected(false);
//        }
//        if (btnAnswer3.isSelected()) {
//            btnAnswer3.setSelected(false);
//        }
    }
    
    private void weVeGotAWinner() {
        JOptionPane.showMessageDialog(rootPane, "Szent Kaposztas Cvekedli!", "Tied a 40 misi", JOptionPane.WARNING_MESSAGE);
        System.exit(0);
    }
    
    private void randomizeQuestions(Kerdesek[] kerdesek) {
        Random random = new Random();
        
        int number1;
        int number2;
        int iterations = random.nextInt(20) + 5;
        
        for (int i = 0; i < iterations; i++) {
            number1 = random.nextInt(15);
            number2 = random.nextInt(15);
            Kerdesek tmp = kerdesek[number1];
            kerdesek[number1] = kerdesek[number2];
            kerdesek[number2] = tmp;
        }
        
        for (Kerdesek kerdesek1 : kerdesek) {
            System.out.println(kerdesek1.getKerdes().toString());
        }
        
    }
    
    private void randomizeAnswers(Kerdesek[] kerdesek) {
        
        String[] answers = new String[4];
        Random random = new Random();
        
        for (int i = 0; i < kerdesek.length; i++) {
            
            answers[0] = kerdesek[i].getValasz0();
            answers[1] = kerdesek[i].getValasz1();
            answers[2] = kerdesek[i].getValasz2();
            answers[3] = kerdesek[i].getValasz3();
            
            for (int ii = 0; ii < 8; ii++) {
                int randIndex1 = random.nextInt(4);
                int randIndex2 = random.nextInt(4);
                
                if (randIndex1 == kerdesek[i].getHelyesvalasz()) {
                    kerdesek[i].setHelyesvalasz(randIndex2);
                } else if (randIndex2 == kerdesek[i].getHelyesvalasz()) {
                    kerdesek[i].setHelyesvalasz(randIndex1);
                }
                
                String tmpAnswer = answers[randIndex1];
                answers[randIndex1] = answers[randIndex2];
                answers[randIndex2] = tmpAnswer;
            }
            
            kerdesek[i].setValasz0(answers[0]);
            kerdesek[i].setValasz1(answers[1]);
            kerdesek[i].setValasz2(answers[2]);
            kerdesek[i].setValasz3(answers[3]);
        }
    }
}
